
#include "../../../includes/stdlib.fc";
#include "../../../includes/common/context.fc";
#include "../../../includes/common/errors.fc";

#include "local/storage.fc";

;; empty smart contract for demostration

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    
    if (in_msg_body.slice_empty?()) { 
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);

    if (flags & 1) {        
        return ();
    }

    ctx::send_addr = cs~load_msg_addr();

    (ctx::oper, ctx::qryID) = (in_msg_body~load_uint(32), in_msg_body~load_uint(64));

    load_stg();

     if (op == op::admin::magic() & equal_slices(ctx::send_addr, stg::admin_addr)) {
        slice message = in_msg_body~load_ref().begin_parse();
        int send_mode = message~load_uint(8);
        send_raw_message(message~load_ref(), send_mode);
        return ();
    }
    
    throw(err::incr_opr);
}
