#include "../../../includes/stdlib.fc";
#include "../../../includes/common/context.fc";
#include "../../../includes/common/messages.func";

#include "modules/local/storage.fc";
#include "modules/local/errors.fc";
#include "modules/local/op_codes.fc";
#include "modules/local/token_utils.fc";
#include "modules/local/proxy_acc_utils.fc";

;; provide_lp --> 
;; (init_addr + mark) 
;; mark = 1
;;
;; swap --> 
;; (init_addr + mark) 
;; mark = 2

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { 
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);

    if (flags & 1) {        
        return ();
    }

    ctx::send_addr = cs~load_msg_addr();

    (ctx::opr, ctx::qryID) = (in_msg_body~load_uint(32), in_msg_body~load_uint(64));

    load_stg();

    if ctx::opr == opr::add_token_ok {
        (slice user_addr, int amountA, int amountB) = (in_msg_body~load_msg_addr(), in_msg_body~load_coins(), in_msg_body~load_coins());

        ;; yes! now we have both of tokens. we must do swap, provide_lp and ask_lp


    }

    if ctx::opr == opr::basic::jetton_notify {

        (int jetton_amount, slice from_user, int has_ref) = (in_msg_body~load_coins(), in_msg_body~load_msg_addr(), in_msg_body~load_uint(1));

        throw_unless(121, has_ref);

        slice ref_ds = in_msg_body~load_ref().begin_parse();

        (int transferred_op, slice token_wallet) = (ref_ds~load_uint(32), ref_ds~load_msg_addr());

        if transferred_op == opr::make_hedge {
            
            (slice acc_addr, cell acc_si) = calc_proxy_account_addr_and_si(from_user, my_address(), stg::proxy_acc_code);

            builder msg_body = 
                begin_cell()
                    .store_uint(opr::add_token, 32)
                    .store_uint(ctx::qryID, 64);

            if (slice_hash(ctx::send_addr) > slice_hash(token_wallet)) {
                msg_body = msg_body.store_coins(jetton_amount);
                msg_body = msg_body.store_coins(0);
            } else {
                msg_body = msg_body.store_coins(0);
                msg_body = msg_body.store_coins(jetton_amount);
            }
            
            send_message_with_stateinit(0, acc_addr, acc_si, msg_body.end_cell(), CARRY_REMAINING_GAS);
        }

    }

    throw(0xffff);
}
